# Generated by Django 5.1.6 on 2025-02-04 04:58

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="MarketplaceUser",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                ("email", models.EmailField(max_length=254, unique=True)),
                ("age", models.PositiveIntegerField(blank=True, null=True)),
                (
                    "sex",
                    models.CharField(
                        blank=True,
                        choices=[("M", "Male"), ("F", "Female"), ("O", "Other")],
                        max_length=1,
                        null=True,
                    ),
                ),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("preferred_location", models.TextField(blank=True, null=True)),
                (
                    "id_verification_status",
                    models.CharField(
                        choices=[
                            ("V", "Verified"),
                            ("P", "Pending"),
                            ("U", "Unverified"),
                        ],
                        default="U",
                        max_length=1,
                    ),
                ),
                (
                    "budget_min",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "budget_max",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to="profile_pictures/"
                    ),
                ),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=15, null=True),
                ),
                ("phone_verified", models.BooleanField(default=False)),
                ("email_verified", models.BooleanField(default=False)),
                ("last_login", models.DateTimeField(blank=True, null=True)),
                ("terms_accepted", models.BooleanField(default=False)),
                ("receive_email_notifications", models.BooleanField(default=True)),
                ("receive_sms_notifications", models.BooleanField(default=False)),
                ("facebook_link", models.URLField(blank=True, null=True)),
                ("instagram_link", models.URLField(blank=True, null=True)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Listing",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "property_type",
                    models.CharField(
                        choices=[
                            ("H", "House"),
                            ("A", "Apartment"),
                            ("C", "Condo"),
                            ("T", "Townhouse"),
                            ("O", "Other"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "payment_type",
                    models.CharField(
                        choices=[
                            ("C", "Cheque"),
                            ("D", "Direct Deposit"),
                            ("I", "Interac / Wire Transfer"),
                            ("P", "PayPal"),
                            ("X", "Chexy"),
                            ("O", "Other"),
                        ],
                        max_length=1,
                    ),
                ),
                ("bedrooms", models.IntegerField()),
                ("bathrooms", models.IntegerField()),
                ("sqft_area", models.PositiveIntegerField()),
                (
                    "laundry_type",
                    models.CharField(
                        choices=[("I", "In-Unit"), ("S", "Shared"), ("N", "None")],
                        max_length=10,
                    ),
                ),
                ("parking_spaces", models.IntegerField()),
                ("heating", models.BooleanField(default=False)),
                ("ac", models.BooleanField(default=False)),
                ("extra_amenities", models.TextField(blank=True, null=True)),
                ("pet_friendly", models.BooleanField(default=False)),
                (
                    "verification_status",
                    models.CharField(
                        choices=[
                            ("V", "Verified"),
                            ("P", "Pending"),
                            ("U", "Unverified"),
                        ],
                        default="U",
                        max_length=10,
                    ),
                ),
                ("move_in_date", models.DateField()),
                ("description", models.TextField()),
                ("unit_number", models.CharField(blank=True, max_length=10, null=True)),
                ("street_address", models.CharField(max_length=255)),
                ("city", models.CharField(max_length=100)),
                ("postal_code", models.CharField(max_length=20)),
                (
                    "utilities_cost",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("utilities_payable_by_tenant", models.BooleanField(default=False)),
                (
                    "property_taxes",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "property_taxes_payable_by_tenant",
                    models.BooleanField(default=False),
                ),
                (
                    "condo_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("condo_fee_payable_by_tenant", models.BooleanField(default=False)),
                (
                    "hoa_fee",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                ("hoa_fee_payable_by_tenant", models.BooleanField(default=False)),
                (
                    "security_deposit",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=10, null=True
                    ),
                ),
                (
                    "security_deposit_payable_by_tenant",
                    models.BooleanField(default=False),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="listings",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Group",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True, null=True)),
                ("move_in_date", models.DateField()),
                ("move_in_ready", models.BooleanField(default=False)),
                (
                    "group_status",
                    models.CharField(
                        choices=[
                            ("O", "Open"),
                            ("F", "Filled"),
                            ("S", "Sent"),
                            ("U", "Under Review"),
                            ("R", "Rejected"),
                            ("I", "Approved - Invited"),
                        ],
                        default="O",
                        max_length=1,
                    ),
                ),
                (
                    "members",
                    models.ManyToManyField(
                        related_name="listing_groups", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="groups",
                        to="marketplace.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Favorites",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="wishlist",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "favorite_listings",
                    models.ManyToManyField(
                        blank=True,
                        related_name="favorited_by",
                        to="marketplace.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ListingPicture",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("image", models.ImageField(upload_to="listing_pictures/")),
                (
                    "location",
                    models.CharField(
                        choices=[
                            ("A", "Aerial View"),
                            ("F", "Front Yard / Property Front"),
                            ("B", "Backyard / Property Back"),
                            ("Br", "Bedroom(s)"),
                            ("Bt", "Bathroom(s)"),
                            ("K", "Kitchen"),
                            ("D", "Dining Room"),
                            ("L", "Living Room"),
                            ("G", "Garage"),
                            ("P", "Parking"),
                            ("U", "Uncategorized"),
                        ],
                        default="U",
                        max_length=2,
                    ),
                ),
                ("is_primary", models.BooleanField(default=False)),
                (
                    "listing",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pictures",
                        to="marketplace.listing",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveIntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3"), (4, "4"), (5, "5")]
                    ),
                ),
                ("comment", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "reviewee_role",
                    models.CharField(
                        choices=[("T", "Tenant"), ("L", "Landlord")], max_length=1
                    ),
                ),
                (
                    "reviewee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="given_reviews",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
